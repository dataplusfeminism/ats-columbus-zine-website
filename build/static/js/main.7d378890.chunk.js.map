{"version":3,"sources":["pages/Home.js","actions/index.js","App.js","constants/defaults.js","reducers/index.js","reducers/main.js","index.js"],"names":["Fragment","React","Home","window","addEventListener","this","resizeHandler","bind","e","dimension","props","dispatch","type","payload","windowWidth","width","innerWidth","height","innerHeight","windowHeight","Component","connect","state","App","exact","path","component","mapLoaded","DEFAULT_STATE","createStore","action","render","store","AppState","document","getElementById"],"mappings":"kQAIMA,EAAWC,IAAMD,SAEjBE,E,wKAEJ,WACEC,OAAOC,iBAAiB,SAAUC,KAAKC,cAAcC,KAAKF,OAC1DA,KAAKC,kB,+BAGP,c,2BAKA,SAAcE,GCjBY,IAACC,EDkBzBJ,KAAKK,MAAMC,SCjBN,CACLC,KAAM,gBACNC,QAAS,CACPC,aAJuBL,EDkBQ,CAC/BM,MAAOZ,OAAOa,WACdC,OAAQd,OAAOe,cChBQH,MACvBI,aAAcV,EAAUQ,Y,oBDoB5B,WAGE,OACE,cAACjB,EAAD,mC,GAxBaoB,aAqCJC,eANO,SAAAC,GACpB,MAAO,CACLH,aAAcG,EAAMH,gBAITE,CAAyBnB,GErClCqB,E,4JAEJ,WAEE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,U,GANvBkB,aAqBHC,eARO,SAAAC,GACpB,MAAO,CACLP,MAAOO,EAAMR,YACbG,OAAQK,EAAMH,aACdQ,UAAWL,EAAMK,aAINN,CAAyBE,G,gBC3B3BK,EAAgB,CAC3Bd,YAAa,KACbK,aAAc,KCCDU,mBCDA,WAAsD,IAA/BP,EAA8B,uDAAtBM,EAAeE,EAAO,uCAElE,OAAOA,EAAOlB,MACZ,IAAK,gBACH,OAAO,2BACFU,GADL,IAEER,YAAagB,EAAOjB,QAAQC,YAC5BK,aAAcW,EAAOjB,QAAQM,eAEjC,QACE,OAAO,eACFG,O,MCGXS,iBACE,cAAC,IAAD,CAAUC,MAAOC,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d378890.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { windowResize } from '../actions';\n\nconst Fragment = React.Fragment;\n\nclass Home extends Component {\n \n  componentWillMount(){\n    window.addEventListener('resize', this.resizeHandler.bind(this));\n    this.resizeHandler();\n  }\n\n  componentDidMount(){\n  \n  }\n\n\n  resizeHandler(e){\n    this.props.dispatch(windowResize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    }));\n    \n  }\n\n  render() {\n\n\n    return (\n      <Fragment>\n        Columbus counter\n      </Fragment>\n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return {\n    windowHeight: state.windowHeight\n  }\n}\n\nexport default connect(mapStateToProps)(Home);","\nexport const windowResize = (dimension) => {\n  return {\n    type: 'WINDOW_RESIZE',\n    payload: {\n      windowWidth: dimension.width,\n      windowHeight: dimension.height\n    }\n  }\n}\n\nexport const changeMapLoaded = (mapLoaded) => {\n  return {\n    type: \"CHANGE_MAP_LOADED\",\n    payload: {\n      mapLoaded: mapLoaded\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './pages/Home';\n\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Home} />\n      </Router>\n      \n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return {\n    width: state.windowWidth,\n    height: state.windowHeight,\n    mapLoaded: state.mapLoaded\n  }\n};\n\nexport default connect(mapStateToProps)(App);","export const DEFAULT_STATE = {\n  windowWidth: 1024,\n  windowHeight: 768,\n};\n\n\nexport const API_URL = \"https://audit-the-streets.dfdev.dataplusfeminism.mit.edu\";","import { createStore } from 'redux';\nimport mainReducer from './main';\n\nexport default createStore(mainReducer);\n","import { DEFAULT_STATE } from '../constants/defaults';\n\nexport default function screenReducer(state = DEFAULT_STATE, action){\n\n  switch(action.type) {\n    case \"WINDOW_RESIZE\":\n      return {\n        ...state,\n        windowWidth: action.payload.windowWidth,\n        windowHeight: action.payload.windowHeight\n      }\n    default: \n      return {\n        ...state\n      };\n  }\n\n};","/* eslint no-console:0 */\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport AppState from './reducers';\nimport \"./stylesheets/style.scss\";\n\nrender(\n  <Provider store={AppState}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}